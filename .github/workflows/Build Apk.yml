name: Deploy Flutter App

on:
  push:
    # Triggers only on pushes to main
    branches:
      - main
    # Also triggers when you push tags (so you can use an explicit version tag)
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: src/frontend/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android release APK
        run: flutter build apk --release

      # Create or update a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}       # or whatever tag youâ€™re using
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false



      - name: Find built APK
        id: find_apk
        run: echo "::set-output name=path::$(find build/app/outputs -name '*.apk' | head -n1)"
        
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_apk.outputs.path }}
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
